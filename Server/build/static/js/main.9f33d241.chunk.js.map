{"version":3,"sources":["reducers/main.js","pages/Login.jsx","pages/SignUp.jsx","pages/Home.jsx","utils/API.js","components/assessment.jsx","components/Hospitals.jsx","components/About.jsx","components/Navbar.jsx","components/Current.jsx","App.js","reportWebVitals.js","index.js"],"names":["appState","isLoading","isAuthenticated","state","action","type","Login","login","useState","email","password","userObject","setUserObject","redirectTo","setRedirectTo","handleChange","event","target","name","value","to","pathname","className","Form","onSubmit","preventDefault","axios","post","alert","Group","size","controlId","Label","Control","autoFocus","onChange","Button","block","SignupForm","firstName","lastName","isLoggedIn","id","Home","props","total","setTotal","recovered","setRecovered","death","setDeath","updated","setUpdated","useEffect","Axios","get","then","res","animateValue","data","results","total_cases","total_recovered","total_deaths","time","Date","month","getMonth","date","getDate","year","getFullYear","hour","getHours","min","getMinutes","dayNight","timeZone","Intl","DateTimeFormat","resolvedOptions","lastUpdated","toString","length","catch","err","start","end","duration","startTimestamp","window","requestAnimationFrame","step","timestamp","progress","Math","floor","join","src","alt","data-covid","toLocaleString","answers","console","log","Assessment","items","text","choices","questionsObject","setQuestionsObject","storedAnswers","setStoredAnswers","isTriage","setIsTriage","triageResult","setTriageResult","API","response","question","answerArray","map","choice_id","checkedAnswer","e","newAnswer","find","answer","filteredArray","filter","push","nextQuestion","a","should_stop","triageRes","previousAnswers","combinedAnswers","concat","document","getElementById","reset","description","label","i","onClick","data-value","HospitalsPage","mapboxgl","accessToken","showPosition","position","userLat","coords","latitude","toFixed","userLon","longitude","Map","container","style","center","zoom","addControl","MapboxGeocoder","navigator","geolocation","getCurrentPosition","section_1","url","controls","width","height","useStyles","makeStyles","theme","drawerPaper","link","textDecoration","color","palette","primary","Navbar","classes","React","setState","toggleDrawer","open","display","Drawer","variant","anchor","onClose","paper","List","ListItem","button","ListItemIcon","ListItemText","CurrentData","latest","setLatest","setResults","searchCountries","setSearchCountries","loading","setLoading","darkTheme","setDarkTheme","all","responseArr","parseInt","countries","item","country","toLowerCase","includes","Card","bg","margin","Img","countryInfo","flag","Body","Title","Text","cases","deaths","todayCases","todayDeaths","active","critical","backgroundColor","justifyContent","data-tip","textAlign","effect","defaultChecked","icons","checked","unchecked","CardDeck","displayType","thousandSeparator","fontSize","Footer","placeholder","queries","columns","query","AppContext","createContext","App","useReducer","reducer","dispatch","Provider","path","component","Signup","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9f33d241.chunk.js","sourcesContent":["export const appState = {\r\n  isLoading: true,\r\n  isAuthenticated: false,\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOADING\":\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.isAuthenticated,\r\n      };\r\n    case \"SET_AUTH\":\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../styles.css\";\r\n\r\nconst Login = ({ login }) => {\r\n  const [userObject, setUserObject] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    // console.log(event.target.value);\r\n    setUserObject({\r\n      ...userObject,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlelogin = (event) => {\r\n    event.preventDefault();\r\n\r\n    const isLoggedin = axios.post(\"/login\", {\r\n      email: userObject.email,\r\n      password: userObject.password,\r\n    });\r\n    if (isLoggedin) {\r\n      setRedirectTo(\"/assessment\");\r\n    } else {\r\n      alert(\"Wrong email or password\");\r\n    }\r\n  };\r\n  if (redirectTo) {\r\n    return <Redirect to={{ pathname: redirectTo }} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <h1>Login Page</h1>\r\n      <Form onSubmit={handlelogin}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={userObject.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={userObject.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction SignupForm() {\r\n  const [userObject, setUserObject] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    redirectTo: null,\r\n  });\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    setUserObject({\r\n      ...userObject,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSignupOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post(\"/signup\", {\r\n      firstName: userObject.firstName,\r\n      lastName: userObject.lastName,\r\n      email: userObject.email,\r\n      password: userObject.password,\r\n      isLoggedIn: true,\r\n    });\r\n\r\n    setRedirectTo(\"/assessment\");\r\n    alert(\"Sign Up Successful\");\r\n  };\r\n\r\n  if (redirectTo) {\r\n    return <Redirect to={{ pathname: redirectTo }} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"SignUp\">\r\n      <h1>SignUp Page</h1>\r\n      <Form onSubmit={handleSignupOnSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"firstName\">\r\n          <Form.Label>Firstname</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            value={userObject.firstName}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"lastName\">\r\n          <Form.Label>LastName</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            value={userObject.lastName}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            id=\"exampleInputEmail1\"\r\n            name=\"email\"\r\n            value={userObject.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            id=\"exampleInputPassword1\"\r\n            name=\"password\"\r\n            value={userObject.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"alert\">\r\n          Already registered?<Link to=\"/login\">Login</Link>\r\n        </div>\r\n\r\n        <Button block size=\"lg\" type=\"submit\">\r\n          SignUp\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const monthAsString = (monthIndex) => {\r\n  return [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ][monthIndex];\r\n};\r\n\r\nconst Home = (props) => {\r\n  const [total, setTotal] = useState(\"~\");\r\n  const [recovered, setRecovered] = useState(\"~\");\r\n  const [death, setDeath] = useState(\"~\");\r\n  const [updated, setUpdated] = useState(\"~\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://api.thevirustracker.com/free-api?global=stats\")\r\n      .then((res) => {\r\n        animateValue(\"total\", 0, res.data.results[0].total_cases, 1000);\r\n        animateValue(\"recovered\", 0, res.data.results[0].total_recovered, 1000);\r\n        animateValue(\"death\", 0, res.data.results[0].total_deaths, 1000);\r\n\r\n        const time = new Date();\r\n        const month = monthAsString(time.getMonth());\r\n        const date = time.getDate();\r\n        const year = time.getFullYear();\r\n        const hour = time.getHours();\r\n        const min = time.getMinutes();\r\n        const dayNight = hour >= 12 ? \"PM\" : \"AM\";\r\n        const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\n        const lastUpdated = `${month} ${date}, ${year}, ${\r\n          hour.toString().length === 1 ? `0${hour}` : hour\r\n        }:${\r\n          min.toString().length === 1 ? `0${min}` : min\r\n        } ${dayNight} ${timeZone}`;\r\n\r\n        setUpdated(lastUpdated);\r\n      })\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  const animateValue = (id, start, end, duration) => {\r\n    let startTimestamp = null;\r\n    const step = (timestamp) => {\r\n      if (!startTimestamp) startTimestamp = timestamp;\r\n      const progress = Math.min((timestamp - startTimestamp) / duration, 1);\r\n      if (id === \"total\") {\r\n        setTotal(Math.floor(progress * (end - start) + start));\r\n      } else if (id === \"recovered\") {\r\n        setRecovered(Math.floor(progress * (end - start) + start));\r\n      } else if (id === \"death\") {\r\n        setDeath(Math.floor(progress * (end - start) + start));\r\n      }\r\n      if (progress < 1) {\r\n        window.requestAnimationFrame(step);\r\n      }\r\n    };\r\n    window.requestAnimationFrame(step);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nk-banner\">\r\n      <div className=\"container\">\r\n        <div\r\n          className={[\r\n            \"row g-gs align-items-center justify-content-between\",\r\n          ].join(\" \")}\r\n        >\r\n          <div className={[\"col-lg-5 order-lg-last\"].join(\" \")}>\r\n            <div className=\"nk-banner-image\">\r\n              {\" \"}\r\n              <img src=\"/header-a.png\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"nk-banner-block\">\r\n              <div className=\"content\">\r\n                <h1 className=\"heading\">\r\n                  {\" \"}\r\n                  <span>MedDig</span>{\" \"}\r\n                  <span className=\"heading-sm\">\r\n                    {\" \"}\r\n                    <span className=\"sup\">COVID-19</span>{\" \"}\r\n                    <span className=\"sub\">App</span>{\" \"}\r\n                  </span>\r\n                </h1>\r\n                <p>\r\n                  The Coronavirus (COVID-19) was first reported in Wuhan, Hubei,\r\n                  China in December 2019, the outbreak was later recognized as a\r\n                  pandemic by the World Health Organization (WHO) on 11 March\r\n                  2020.\r\n                </p>\r\n                <ul className=\"nk-banner-btns\">\r\n                  <li>\r\n                    <Link\r\n                      to=\"/Aboutcovid\"\r\n                      className=\"btn btn-transparent scrollto\"\r\n                    >\r\n                      <span>Read More</span>\r\n                      <em className={[\"icon ni ni-arrow-right\"].join(\" \")}></em>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to=\"/currentdata\"\r\n                      className=\"btn btn-transparent scrollto\"\r\n                    >\r\n                      <span>Current Data</span>\r\n                      <em className={[\"icon ni ni-arrow-right\"].join(\" \")}></em>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n                <div className=\"status\" data-covid=\"world\">\r\n                  <div className={[\"row g-gs\"].join(\" \")}>\r\n                    <div className={[\"col-sm-4 col-6\"].join(\" \")}>\r\n                      <div className=\"status-item\">\r\n                        <h6 className=\"title\">Worldwide Cases</h6>\r\n                        <div\r\n                          className={[\"h3 count covid-stats-cases\"].join(\" \")}\r\n                        >\r\n                          {total.toLocaleString()}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className={[\"col-sm-4 col-6\"].join(\" \")}>\r\n                      <div className=\"status-item\">\r\n                        <h6 className=\"title\">Deaths</h6>\r\n                        <div\r\n                          className={[\"h3 count covid-stats-death\"].join(\" \")}\r\n                        >\r\n                          {death.toLocaleString()}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className={[\"col-sm-4 col-6\"].join(\" \")}>\r\n                      <div className=\"status-item\">\r\n                        <h6 className=\"title\">Recovered</h6>\r\n                        <div\r\n                          className={[\"h3 count covid-stats-recovered\"].join(\r\n                            \" \"\r\n                          )}\r\n                        >\r\n                          {recovered.toLocaleString()}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-note\">\r\n                    * Last updated:{\" \"}\r\n                    <span className=\"covid-update-time\">{updated}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  // Gets all symptoms\r\n  getQuestions: function () {\r\n    return axios.get(\"/api/symptoms\");\r\n  },\r\n\r\n  // Save Evidence to backend api\r\n  postAnswers: function (answers) {\r\n    console.log(answers);\r\n    return axios.post(\"/api/symptoms\", answers);\r\n  },\r\n  callTriage: function (answers) {\r\n    console.log(answers);\r\n    return axios.post(\"/api/triage\", answers);\r\n  },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport \"./assessments.css\";\r\n\r\nconst Assessment = () => {\r\n  const [questionsObject, setQuestionsObject] = useState({\r\n    items: [],\r\n    text: \"\",\r\n    type: \"\",\r\n    choices: [],\r\n  });\r\n  const [storedAnswers, setStoredAnswers] = useState([]);\r\n  const [isTriage, setIsTriage] = useState(false);\r\n  const [triageResult, setTriageResult] = useState({});\r\n\r\n  useEffect(() => {\r\n    // console.log(\"use effect This is being called\");\r\n    API.getQuestions().then((res) => {\r\n      // console.log(\" use effect assessment\", res.data);\r\n      const response = res.data.question;\r\n      setQuestionsObject(response);\r\n      const answerArray = response.items.map((question) => {\r\n        return { id: question.id, choice_id: \"absent\" };\r\n      });\r\n      setStoredAnswers(answerArray);\r\n    });\r\n  }, []);\r\n\r\n  const checkedAnswer = (e) => {\r\n    const id = e.target.id;\r\n    const foundAnswer = storedAnswers.find((answer) => answer.id === id);\r\n    const newAnswer =\r\n      foundAnswer.choice_id === \"present\" ? \"absent\" : \"present\";\r\n    const filteredArray = storedAnswers.filter((answer) => answer.id !== id);\r\n    filteredArray.push({ id: id, choice_id: newAnswer });\r\n    setStoredAnswers(filteredArray);\r\n  };\r\n\r\n  const groupMultiple = (items) => {\r\n    return (\r\n      <form id=\"answerCheckBoxes\">\r\n        <ul>\r\n          {questionsObject.items.map((question, i) => (\r\n            <label key={i} className=\"checkText\">\r\n              {question.name}\r\n              <input onClick={checkedAnswer} id={question.id} type=\"checkbox\" />\r\n              <span className=\"checkmark\"></span>\r\n            </label>\r\n          ))}\r\n        </ul>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const groupSingle = (items) => {\r\n    return (\r\n      <form id=\"answerCheckBoxes\">\r\n        <ul>\r\n          {questionsObject.items.map((question, i) => (\r\n            <label key={i} className=\"checkText\">\r\n              {question.name}\r\n              <input\r\n                onClick={checkedAnswer}\r\n                id={question.id}\r\n                type=\"radio\"\r\n                name=\"answer\"\r\n                value=\"present\"\r\n              />\r\n              <span className=\"checkmark\"></span>\r\n            </label>\r\n          ))}\r\n        </ul>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const single = () => {\r\n    return (\r\n      <form id=\"answerCheckBoxes\">\r\n        <ul>\r\n          {questionsObject.items.map((question, i) => (\r\n            <label key={i} className=\"checkText checkTextFinal\">\r\n              {question.name}\r\n              <br></br>\r\n              <button\r\n                onClick={checkedAnswer}\r\n                id={question.id}\r\n                type=\"button\"\r\n                data-value=\"present\"\r\n                className=\"btn btn-choice\"\r\n              >\r\n                Yes\r\n              </button>\r\n\r\n              <button\r\n                onClick={checkedAnswer}\r\n                id={question.id}\r\n                type=\"button\"\r\n                data-value=\"absent\"\r\n                className=\"btn btn-choice\"\r\n              >\r\n                No\r\n              </button>\r\n              <br></br>\r\n              <div className=\"nextBtnWrapper\">\r\n                <button onClick={nextQuestion} className=\"next-question btn\">\r\n                  Next question\r\n                </button>\r\n              </div>\r\n            </label>\r\n          ))}\r\n        </ul>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const nextQuestion = async (e) => {\r\n    e.preventDefault();\r\n    const res = await API.postAnswers(storedAnswers);\r\n\r\n    console.log(\"onclick res\", res);\r\n    if (res.data.should_stop) {\r\n      setIsTriage(true);\r\n      console.log(\"made it to reroute\");\r\n\r\n      const triageRes = await API.callTriage(storedAnswers);\r\n      console.log(\"triage res\", triageRes);\r\n      setTriageResult(triageRes.data);\r\n      return;\r\n    }\r\n    const response = res.data.question;\r\n    setQuestionsObject(response);\r\n    const answerArray = response.items.map((question) => {\r\n      return { id: question.id, choice_id: \"absent\" };\r\n    });\r\n    const previousAnswers = [...storedAnswers];\r\n    const combinedAnswers = answerArray.concat(previousAnswers);\r\n    setStoredAnswers(combinedAnswers);\r\n    if (!isTriage) {\r\n      document.getElementById(\"answerCheckBoxes\").reset();\r\n    }\r\n  };\r\n  if (isTriage) {\r\n    return (\r\n      <div className=\"col-sm-12 assessmentCol checkText\">\r\n        <h5>Follow preventive measures</h5>\r\n        <br></br>\r\n        <p>{triageResult.description}</p>\r\n        <br></br>\r\n        <p>{triageResult.label}</p>\r\n        <div className=\"text-left disclaimer\">\r\n          <hr />\r\n          <small>\r\n            <span className=\"disclosure\">Disclosure: </span>\r\n            Please be advised the MedDig symptom checker is not a diagnosis, it\r\n            is for informational purposes only and does not represent, in any\r\n            way, a qualified medical opinion. The symptom checker and its\r\n            results are entirely based on WHO and CDC guidelines. If this is an\r\n            emergency, call your local emergency number immediately. Do not\r\n            proceed with the symptom checker. Medical attention is required\r\n            immediately. Your data is safe. Information that you provide is\r\n            anonymous and not shared with anyone.\r\n          </small>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-sm-10 mx-auto assessmentCol\">\r\n      <h5> Assess Your Health</h5>\r\n      <br></br>\r\n      <p className=\"text-center\">\r\n        Answer few questions to find out your covid status.{\" \"}\r\n      </p>\r\n      <hr />\r\n      <p className=\"font-weight-bold\">{questionsObject.text}</p>\r\n      <br></br>\r\n      <div>\r\n        {questionsObject.type === \"single\"\r\n          ? single()\r\n          : questionsObject.type === \"group_multiple\"\r\n          ? groupMultiple()\r\n          : groupSingle()}\r\n        {questionsObject.type !== \"single\" ? (\r\n          <div className=\"nextBtnWrapper\">\r\n            {\" \"}\r\n            <button onClick={nextQuestion} className=\"next-question btn\">\r\n              Next question\r\n            </button>{\" \"}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <div className=\"text-left disclaimer\">\r\n        <hr />\r\n        <small>\r\n          <span className=\"disclosure\">Disclosure: </span>\r\n          Please be advised the MedDig symptom checker is not a diagnosis, it is\r\n          for informational purposes only and does not represent, in any way, a\r\n          qualified medical opinion. The symptom checker and its results are\r\n          entirely based on WHO and CDC guidelines. If this is an emergency,\r\n          call your local emergency number immediately. Do not proceed with the\r\n          symptom checker. Medical attention is required immediately. Your data\r\n          is safe. Information that you provide is anonymous and not shared with\r\n          anyone.\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Assessment;\r\n","import React from \"react\";\r\nimport \"./Hospital.css\";\r\nimport \"./assessments.css\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\r\n\r\nconst HospitalsPage = () => {\r\n  mapboxgl.accessToken =\r\n    \"pk.eyJ1IjoidGhlaGVhbHRoYXBwIiwiYSI6ImNrajNlN3ZjbjVmNmkydnFqY2xodWdkdDQifQ.9r8D8DCmGAQwmefaYj0lyw\";\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition);\r\n    }\r\n  };\r\n\r\n  const showPosition = (position) => {\r\n    let userLat = position.coords.latitude.toFixed(2);\r\n    let userLon = position.coords.longitude.toFixed(2);\r\n    console.log(userLat, userLon);\r\n\r\n    const map = new mapboxgl.Map({\r\n      container: \"map\",\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: [userLon, userLat],\r\n      zoom: 8,\r\n    });\r\n\r\n    map.addControl(\r\n      new MapboxGeocoder({\r\n        accessToken: mapboxgl.accessToken,\r\n        mapboxgl: mapboxgl,\r\n      })\r\n    );\r\n  };\r\n  getLocation();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col\">\r\n        <h3>Search for Health Centers and Hospitals here</h3>\r\n        <div id=\"map\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default HospitalsPage;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst section_1 = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"section-content\">\r\n        <div className={[\"row g-gs justify-content-between\"].join(\" \")}>\r\n          <div className=\"col-lg-7\">\r\n            <div className=\"text-block\">\r\n              <h5 className=\"subtitle\">About the disease</h5>\r\n              <h2 className=\"title\">\r\n                Coronavirus <br className=\"d-sm-none\" />\r\n                (COVID-19)\r\n              </h2>\r\n              <ReactPlayer\r\n                url=\"https://www.youtube.com/watch?v=7z0kzYpuqhw\"\r\n                controls\r\n                width=\"896px\"\r\n                height=\"504px\"\r\n              />\r\n              <p className=\"lead\">\r\n                <strong>\r\n                  COVID-19 is a new illness that can affect your lungs and\r\n                  airways.\r\n                </strong>{\" \"}\r\n                It's caused by a virus called coronavirus. It was discovered in\r\n                December 2019 in Wuhan, Hubei, China.\r\n              </p>\r\n              <p>\r\n                The virus that causes COVID-19 is mainly transmitted through\r\n                droplets generated when an infected person coughs, sneezes, or\r\n                exhales. These droplets are too heavy to hang in the air, and\r\n                quickly fall on floors or surfaces.\r\n              </p>\r\n              <p>\r\n                You can be infected by breathing in the virus if you are within\r\n                close proximity of someone who has COVID-19, or by touching a\r\n                contaminated surface and then your eyes, nose or mouth.\r\n              </p>\r\n              <p>\r\n                Common signs of infection include respiratory symptoms, fever,\r\n                cough, shortness of breath and breathing difficulties. In more\r\n                severe cases, infection can cause pneumonia, severe acute\r\n                respiratory syndrome, kidney failure and even death.\r\n              </p>\r\n              <p>\r\n                Standard recommendations to prevent infection spread include\r\n                regular hand washing, covering mouth and nose when coughing and\r\n                sneezing, thoroughly cooking meat and eggs. Avoid close contact\r\n                with anyone showing symptoms of respiratory illness such as\r\n                coughing and sneezing.\r\n              </p>\r\n              <h5 className=\"subtitle\">How coronavirus is spread</h5>\r\n              <h2 className=\"title\">\r\n                Transmission of <br className=\"d-sm-none\" /> COVID-19\r\n              </h2>\r\n              <p>\r\n                Because it's a new illness, we do not know exactly how\r\n                coronavirus spreads from person to person. Similar viruses are\r\n                spread in cough droplets.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            <div className={[\"row g-gs justify-content-center\"].join(\" \")}>\r\n              <div className={[\"col-sm-10 col-md-8 col-lg-4\"].join(\" \")}>\r\n                <div className=\"box-gfx\">\r\n                  {\" \"}\r\n                  <img src=\"/spread-a.png\" alt=\"\" />\r\n                </div>\r\n                <div className=\"box-content\">\r\n                  <h4 className=\"title\">\r\n                    Person-to-person spread as close contact with infected\r\n                  </h4>\r\n                  <p>\r\n                    The coronavirus is thought to spread mainly from person to\r\n                    person. This can happen between people who are in close\r\n                    contact with one another.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={[\"col-sm-10 col-md-8 col-lg-4\"].join(\" \")}>\r\n            <div className=\"box-gfx\">\r\n              {\" \"}\r\n              <img src=\"/spread-b.png\" alt=\"\" />\r\n            </div>\r\n            <div className=\"box-content\">\r\n              <h4 className=\"title\">\r\n                Touching or contact with infected surfaces or objects\r\n              </h4>\r\n              <p>\r\n                A person can get COVID-19 by touching a surface or object that\r\n                has the virus on it and then touching their own mouth, nose, or\r\n                possibly their eyes.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className={[\"col-sm-10 col-md-8 col-lg-4\"].join(\" \")}>\r\n            <div className=\"box-gfx\">\r\n              {\" \"}\r\n              <img src=\"/spread-c.png\" alt=\"\" />\r\n            </div>\r\n            <div className=\"box-content\">\r\n              <h4 className=\"title\">\r\n                Droplets that from infected person coughs or sneezes\r\n              </h4>\r\n              <p>\r\n                The coronavirus is thought to spread mainly from person to\r\n                person. This can happen between people who are in close contact\r\n                with one another.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={[\"section-head text-center wide-lg\"].join(\" \")}>\r\n        <h2 className=\"title\">\r\n          Prevention <br className=\"d-sm-none\" /> &amp; advice\r\n        </h2>\r\n        <p>\r\n          There is currently no vaccine to prevent coronavirus disease 2019\r\n          (COVID-19).{\" \"}\r\n          <strong>\r\n            The best way to prevent illness is to avoid being exposed to this\r\n            virus.\r\n          </strong>{\" \"}\r\n          Stay aware of the latest information on the COVID-19 outbreak,\r\n          available on the WHO website and through your national and local\r\n          public health authority.\r\n        </p>\r\n      </div>\r\n      <div className=\"section-content\">\r\n        <div className={[\"row g-gs gy-sm-m\"].join(\" \")}>\r\n          <div className={[\"col-lg-3 col-sm-6\"].join(\" \")}>\r\n            <div className=\"box3\">\r\n              <div className=\"box3-gfx\">\r\n                {\" \"}\r\n                <img src=\"/advice-a.png\" alt=\"\" />\r\n              </div>\r\n              <div className=\"box3-content\">\r\n                <h5 className=\"title\">Wash your hands frequently</h5>\r\n                <p>\r\n                  Regularly and thoroughly clean your hands with an\r\n                  alcohol-based hand rub or wash them with soap and water for at\r\n                  least 20 seconds.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={[\"col-lg-3 col-sm-6\"].join(\" \")}>\r\n            <div className=\"box3\">\r\n              <div className=\"box3-gfx\">\r\n                {\" \"}\r\n                <img src=\"/advice-b.png\" alt=\"\" />\r\n              </div>\r\n              <div className=\"box3-content\">\r\n                <h5 className=\"title\">Maintain social distancing</h5>\r\n                <p>\r\n                  Maintain at least 1 metre (3 feet) distance between yourself &\r\n                  anyone who is coughing or sneezing. If you are too close, get\r\n                  chance to infected.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={[\"col-lg-3 col-sm-6\"].join(\" \")}>\r\n            <div className=\"box3\">\r\n              <div className=\"box3-gfx\">\r\n                {\" \"}\r\n                <img src=\"/advice-c.png\" alt=\"\" />\r\n              </div>\r\n              <div className=\"box3-content\">\r\n                <h5 className=\"title\">Avoid touching face</h5>\r\n                <p>\r\n                  Hands touch many surfaces and can pick up viruses. So, hands\r\n                  can transfer the virus to your eyes, nose or mouth and can\r\n                  make you sick.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={[\"col-lg-3 col-sm-6\"].join(\" \")}>\r\n            <div className=\"box3\">\r\n              <div className=\"box3-gfx\">\r\n                {\" \"}\r\n                <img src=\"/advice-d.png\" alt=\"\" />\r\n              </div>\r\n              <div className=\"box3-content\">\r\n                <h5 className=\"title\">Practice respiratory hygiene</h5>\r\n                <p>\r\n                  Maintain good respiratory hygiene as covering your mouth &\r\n                  nose with your bent elbow or tissue when cough or sneeze.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default section_1;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport LocationSearchingIcon from \"@material-ui/icons/LocationSearching\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawerPaper: { width: \"inherit\" },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState(false);\r\n  const toggleDrawer = (open) => (event) => {\r\n    setState(open);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <button onClick={toggleDrawer(true)}>\r\n        <MenuIcon color=\"primary\" />{\" \"}\r\n      </button>\r\n      <Drawer\r\n        style={{ width: \"220px\" }}\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={state}\r\n        onClose={toggleDrawer(false)}\r\n        classes={{ paper: classes.drawerPaper }}\r\n      >\r\n        <List>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Home\"} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/Aboutcovid\" className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InfoIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"About Covid19\"} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n\r\n        <Link to=\"/currentdata\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <LocationSearchingIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Current Data\"} />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/hospital\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <LocalHospitalIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Search Hospitals\"} />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/login\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AccountCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Login\"} />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/signup\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AccountCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Signup\"} />\r\n          </ListItem>\r\n        </Link>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport Columns from \"react-columns\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport Toggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\n\r\nfunction CurrentData() {\r\n  const [latest, setLatest] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [searchCountries, setSearchCountries] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [darkTheme, setDarkTheme] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .all([\r\n        axios.get(\"https://corona.lmao.ninja/v2/all\"),\r\n        axios.get(\"https://corona.lmao.ninja/v2/countries\"),\r\n      ])\r\n      .then((responseArr) => {\r\n        setLatest(responseArr[0].data);\r\n        setResults(responseArr[1].data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const date = new Date(parseInt(latest.updated));\r\n  const lastUpdated = date.toString();\r\n\r\n  const filterCountries = results.filter((item) => {\r\n    return searchCountries !== \"\"\r\n      ? item.country.toLowerCase().includes(searchCountries.toLowerCase())\r\n      : item;\r\n  });\r\n\r\n  const countries = filterCountries.map((data, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        bg={darkTheme ? \"dark\" : \"light\"}\r\n        text={darkTheme ? \"light\" : \"dark\"}\r\n        className=\"text-center\"\r\n        style={{ margin: \"10px\" }}\r\n      >\r\n        <Card.Img variant=\"top\" src={data.countryInfo.flag} />\r\n        <Card.Body>\r\n          <Card.Title>{data.country}</Card.Title>\r\n          <Card.Text>Cases {data.cases}</Card.Text>\r\n          <Card.Text>Deaths {data.deaths}</Card.Text>\r\n          <Card.Text>Recovered {data.recovered}</Card.Text>\r\n          <Card.Text>Today's cases {data.todayCases}</Card.Text>\r\n          <Card.Text>Today's deaths {data.todayDeaths}</Card.Text>\r\n          <Card.Text>Active {data.active}</Card.Text>\r\n          <Card.Text>Critical {data.critical}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  });\r\n\r\n  var queries = [\r\n    {\r\n      columns: 2,\r\n      query: \"min-width: 500px\",\r\n    },\r\n    {\r\n      columns: 3,\r\n      query: \"min-width: 1000px\",\r\n    },\r\n  ];\r\n\r\n  const handleDarkThemeChange = () => {\r\n    setDarkTheme(!darkTheme);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: darkTheme ? \"black\" : \"white\",\r\n        color: darkTheme ? \"white\" : \"black\",\r\n      }}\r\n    >\r\n      <br />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <RingLoader size={50} color={\"green\"} loading={loading} />\r\n      </div>\r\n      <br />\r\n      <h2\r\n        data-tip=\"Last modified date: 16/05/2020 - v2.2\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        COVID-19 Update\r\n      </h2>\r\n      <ReactTooltip effect=\"solid\" />\r\n      <br />\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Toggle\r\n          defaultChecked={false}\r\n          icons={{\r\n            checked: \"🌜\",\r\n            unchecked: \"🌞\",\r\n          }}\r\n          onChange={handleDarkThemeChange}\r\n        />\r\n      </div>\r\n      <br />\r\n      <CardDeck>\r\n        <Card\r\n          bg=\"secondary\"\r\n          text=\"white\"\r\n          className=\"text-center\"\r\n          style={{ margin: \"10px\" }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>Cases</Card.Title>\r\n            {/* <Card.Text>{latest.cases}</Card.Text> */}\r\n            <NumberFormat\r\n              value={latest.cases}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              style={{ fontSize: \"30px\" }}\r\n            />\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small>Last updated {lastUpdated}</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card\r\n          bg=\"danger\"\r\n          text={\"white\"}\r\n          className=\"text-center\"\r\n          style={{ margin: \"10px\" }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>Deaths</Card.Title>\r\n            <Card.Text>\r\n              {\" \"}\r\n              <NumberFormat\r\n                value={latest.deaths}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                style={{ fontSize: \"30px\" }}\r\n              />\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small>Last updated {lastUpdated}</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card\r\n          bg=\"success\"\r\n          text={\"white\"}\r\n          className=\"text-center\"\r\n          style={{ margin: \"10px\" }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>Recovered</Card.Title>\r\n            <Card.Text>\r\n              {\" \"}\r\n              <NumberFormat\r\n                value={latest.recovered}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                style={{ fontSize: \"30px\" }}\r\n              />\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small>Last updated {lastUpdated}</small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </CardDeck>\r\n      <br />\r\n      <Form>\r\n        <Form.Group controlId=\"formGroupSearch\">\r\n          <Form.Control\r\n            bg=\"dark\"\r\n            type=\"text\"\r\n            placeholder=\"Search for countries\"\r\n            onChange={(e) => setSearchCountries(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <Columns queries={queries}>{countries}</Columns>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentData;\r\n","import React, { useReducer } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport reducer, { appState } from \"./reducers/main\";\n\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/SignUp\";\nimport Home from \"./pages/Home\";\nimport Assessment from \"./components/assessment\";\nimport HospitalsPage from \"./components/Hospitals\";\nimport section_1 from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport CurrentData from \"./components/Current\";\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n  const [state, dispatch] = useReducer(appState, reducer);\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Navbar />\n        <Switch>\n          <AppContext.Provider value={{ state: state, dispatch: dispatch }}>\n            <Route path={\"/login\"} component={Login} />\n            <Route path={\"/signup\"} component={Signup} />\n            <Route path={\"/assessment\"} component={Assessment} />\n            <Route path={\"/hospital\"} component={HospitalsPage} />\n            <Route path={\"/currentdata\"} component={CurrentData} />\n            <Route path={\"/Aboutcovid\"} component={section_1} />\n            <Route exact={true} path={\"/\"} component={Home} />\n          </AppContext.Provider>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}